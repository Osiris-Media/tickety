spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/tickety
    username: tickety
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8000/auth/realms/tickety
          jwk-set-uri: http://localhost:8000/realms/tickety/protocol/openid-connect/certs

keycloak:
  realm: tickety
  resource: tickety
  auth-server-url: http://localhost:8000/auth
  ssl-required: external
  credentials:
    secret: wNrjoX16rD8JIlnBLHZkiWKtwhI6sWm5
  use-resource-role-mappings: true
  public-client: true
  confidential-port: 0

security:
  basic:
    enabled: false

server:
  port: 8080

rate-limit:
  default:
    name: ${DEFAULT_RATE_LIMIT_NAME:DEFAULT}
    max-requests: ${DEFAULT_MAX_REQUESTS:50}
    refill-in-seconds: ${DEFAULT_REFILL_IN_SECONDS:1}

miscellaneous:
  max-response-time-to-log-in-ms: ${MAX_RESPONSE_TIME_TO_LOG_IN_MS:1000}

rabbitmq:
  host: ${RABBITMQ_HOST}
  port: ${RABBITMQ_PORT}
  username: ${RABBITMQ_USERNAME}
  password: ${RABBITMQ_PASSWORD}
  listeners:
    event:
      queue: ${RABBITMQ_LISTENERS_EVENT_QUEUE}
      prefetch-count: ${RABBITMQ_LISTENERS_EVENT_PREFETCH_COUNT:10}
  publishers:
    webhook:
      exchange: ${RABBITMQ_PUBLISHERS_WEBHOOK_EXCHANGE}
      routingkey: ${RABBITMQ_PUBLISHERS_WEBHOOK_ROUTING_KEY}

kubernetes:
  service-name: ${KUBERNETES_SERVICE_NAME:tickety}

management:
  server:
    port: 8081
  info:
    java:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
        add-additional-paths: true
    #      group:
    #       readiness:
    #         include: rabbit

  endpoints:
    web:
      exposure:
        include: info, health, metrics, preStopHook # prometheus

profiling:
  pyroscope:
    enabled: false
    server: http://pyroscope-local.cloud-diplomats.com
